<apex:component allowDML="true" selfClosing="true" access="global"
	controller="zqu.CreateQuoteCompController">
	<apex:attribute name="title" access="global" type="String"
		description="Page title that will be displayed in the component" />
	<apex:attribute name="subTitle" access="global" type="String"
		description="Sub title that will be displayed in the component" />
	<apex:attribute name="opportunityId" access="global"
		assignTo="{!quoteController.paramOppId}" required="true" type="String"
		description="Opportunity Id" />
	<apex:attribute name="subscriptionId" access="global" type="String"
		assignTo="{!quoteController.paramSubscriptionId}" required="true"
		description="Subscription Id" />
	<apex:attribute name="billingAccountId" access="global" type="String"
		assignTo="{!quoteController.paramBillingAccountId}" required="true"
		description="BillingAccount Id" />
	<apex:attribute name="nextPageUrl" access="global" type="String"
		assignTo="{!quoteController.paramNextPageUrl}"
		description="The next page after creating quotes" />
	<apex:attribute name="cancelPageUrl" access="global" type="String"
		assignTo="{!quoteController.paramCancelPageUrl}"
		description="The cancel page when clicking the cancel button" />
	<apex:attribute name="backPageUrl" access="global" type="String"
		assignTo="{!quoteController.paramBackPageUrl}"
		description="The page to navigate to upon clicking the back button" />
	
	<!-- COM-4888 - Support for optional Back button -->	
	<apex:attribute name="backButtonLabel" assignTo="{!backButtonText}"
		type="String" access="global"
		description="Text value rendered in the back button" />
	<apex:attribute name="nextButtonLabel" assignTo="{!nextButtonText}"
		type="String" access="global"
		description="Text value rendered in the back button" />
	<apex:attribute name="renderBackButton" assignTo="{!quoteController.propOptions.renderBackButton}"
		type="Boolean" access="global"
		description="Boolean to specify whether or not to render the back button" />
	
	<apex:sectionHeader rendered="{!NOT(ISBLANK(title))}" title="{!title}"
		subtitle="{!IF(ISBLANK(subTitle), defaultSubTitle, subTitle)}"
		id="quoteTitle" />
				
	<script>
	  var $jq = jQuery.noConflict();
	  function createQuote_CSSSet(dataId){
	    var selector = "span[data-id='" + dataId + "']";
	    var ele = $jq(selector);
      if(ele.length){
        ele.each(function(index){
          var parentEle = $jq(this).parent(".dataCol");
          var parentEle2 = $jq(this).parent(".data2Col");
          if(parentEle.length){
            parentEle.removeClass("dataCol");
            parentEle.css('padding-top', '5px');
          }
          if(parentEle2.length){
            parentEle2.removeClass("data2Col");
            parentEle2.css('padding-top', '5px');
          }
        });
      }
	  }
	  $jq(function(){
	    createQuote_CSSSet("customRenderedCurrency");
	    createQuote_CSSSet("customRenderedInvoiceOwner");
	    createQuote_CSSSet("customRenderedParentBillingAccount");
	    createQuote_CSSSet("customRenderedTermType");
        
        setTermTypeRelatedFieldsCSS();
        changeTermType("{!quoteController.quote.zqu__Subscription_Term_Type__c}");
      });
      
      function setTermTypeRelatedFieldsCSS(){
        if($jq("span[data-id='termTypeRelatedFields_false']")){
          var ele = $jq("span[data-id='customRenderedTermType']");
          var parentTd = ele.parents("td:first");
          var parentSiblingTd = parentTd.prevUntil("td:first");
          if(parentSiblingTd.length){
            var relatedFields = $jq("span[data-id='termTypeRelatedFields_false']");
            relatedFields.css("margin-left","-100%");
          }
        }
      }
      
      function changeCurrency(val) {
        if(validateInvoiceOwner)
          validateInvoiceOwner(val);
      }
      
      var relatedFields;
      
      function changeTermType(val){
        if($jq("span[data-id='termTypeRelatedFields_false']").length){
          relatedFields = $jq("span[data-id='termTypeRelatedFields_false']");
        }
        if($jq("span[data-id='termTypeRelatedFields_true']").length){
          relatedFields = $jq("span[data-id='termTypeRelatedFields_true']"); 
        }
        if(relatedFields != null){
          if(val == "Termed"){
            parentNodeOfRelatedFields = $jq("span[data-id='customRenderedTermType']");
            parentNodeOfRelatedFields.append(relatedFields);
          }
          else{
            relatedFields.remove();
          }
        }
      }
	</script>
	
	<apex:form >
	
		<apex:actionFunction name="doCancel" action="{!quoteController.cancelQuoteWizard}" immediate="true" />
		<apex:actionFunction name="goBack" action="{!quoteController.goBack}" immediate="true" rerender="propertyComponent" oncomplete="closeStatusModal();" />
	
		<c:PropertyComponent saveButtonLabel="{!NextButtonText}"
			BackButtonLabel="{!BackButtonText}"
			options="{!quoteController.propOptions}"
			id="propertyComponent" >

			<!-- Custom Rendered Currency -->
			<apex:outputPanel styleClass="customRenderedFieldPanel" html-data-id="customRenderedCurrency"
				rendered="{!AND(quoteController.isInvoiceOwnerEnabled, quoteType == 'Subscription', IF(field.name == zquotesNamespace + 'Currency__c', true, false))}">
				<apex:outputPanel style="padding-right:8px; float: left; padding-top: 0px; width: {!IF(fieldSet.isSingleColumn, '18%','36%')};"
					styleClass="labelCol">
					<apex:outputLabel style="margin-right: 10px;">{!field.label}</apex:outputLabel>
				</apex:outputPanel>
				<apex:inputField value="{!quoteController.quote.zqu__Currency__c}"
					required="{!field.isRequired}"
					onchange="displayStatusModal();changeCurrency(this.options[this.selectedIndex].value);"
					rendered="{!NOT(quoteController.isCurrencyReadOnly)}" />
				<apex:outputField value="{!quoteController.quote.zqu__Currency__c}"
					rendered="{!quoteController.isCurrencyReadOnly}" />
			</apex:outputPanel>


			<!-- Custom Rendered Invoice Owner -->
			<apex:outputPanel id="customRenderedInvoiceOwner" html-data-id="customRenderedInvoiceOwner"
				rendered="{!AND(quoteController.isInvoiceOwnerEnabled, IF(field.name == zquotesNamespace + 'InvoiceOwnerName__c', true, false))}">
				<apex:pageblockSectionItem >
					<apex:outputPanel style="padding-right:8px; float: left; width: {!IF(fieldSet.isSingleColumn, '18%','36%')};"
						styleClass="labelCol">
						<apex:outputLabel style="margin-right: 8px;">{!field.label}</apex:outputLabel>
					</apex:outputPanel>
					<apex:outputPanel style="float: left;">
						<c:LookupComponent options="{!quoteController.invoiceOwnerLookupOptions}"
							isRequired="{!field.isRequired}"></c:LookupComponent>
					</apex:outputPanel>
				</apex:pageblockSectionItem>
			</apex:outputPanel>
			
			<apex:outputPanel id="customRenderedParentBillingAccount" html-data-id="customRenderedParentBillingAccount"
				rendered="{!AND(ISBLANK(billingAccountId), quoteController.isBillingAccountOwnerEnabled, quoteType == 'Subscription', field.name == zquotesNamespace + 'ZuoraParentBillingAccountName__c')}">
				<apex:pageBlockSectionItem >
					<apex:outputPanel style="padding-right:8px; float: left; width: {!IF(fieldSet.isSingleColumn, '18%','36%')};"
						styleClass="labelCol">
						<apex:outputLabel style="margin-left: 10px;">{!field.label}</apex:outputLabel>
					</apex:outputPanel>
					<apex:outputPanel style="float: left;">
						<c:LookupComponent options="{!quoteController.parentBillingAccountLookupOptions}"></c:LookupComponent>
					</apex:outputPanel>
				</apex:pageBlockSectionItem>
			</apex:outputPanel>
			
			<!-- Custom Rendered Subscription Term Type -->
            <apex:outputPanel html-data-id="customRenderedTermType" styleClass="customRenderedFieldPanel" rendered="{!IF(field.name == zquotesNamespace + 'Subscription_Term_Type__c', true, false)}">
              
              <apex:pageBlockSectionItem >
                <apex:outputPanel style="float: left; padding-top: 0px; width:{!IF(fieldSet.isSingleColumn, '18%','36%')};" styleClass="labelCol">
                  <apex:outputLabel style="margin-right: 10px;">{!field.label}</apex:outputLabel>
                </apex:outputPanel>
                <apex:inputField value="{!quoteController.quote.zqu__Subscription_Term_Type__c}"
                                 required="{!field.isRequired}"
                                 onchange="changeTermType(this.options[this.selectedIndex].value);"
                                 style="margin-left: -3px;"/>
              </apex:pageBlockSectionItem>
              
              <apex:outputPanel html-data-id="termTypeRelatedFields_{!fieldSet.isSingleColumn}" id="termTypeRelatedFields" style="float:left; margin-top:8px; width:{!IF(fieldSet.isSingleColumn, '100%','200%')};">
                <apex:pageBlockSection columns="{!IF(fieldSet.isSingleColumn, '1','2')}">
                  <apex:pageBlockSectionItem >
                    <apex:outputLabel >{!$ObjectType.zqu__Quote__c.fields.zqu__InitialTerm__c.Label}</apex:outputLabel>
                    <apex:inputField value="{!quoteController.quote.zqu__InitialTerm__c}" required="true"/>
                  </apex:pageBlockSectionItem>
                  
                  <apex:pageBlockSectionItem >
                    <apex:outputLabel >{!$ObjectType.zqu__Quote__c.fields.zqu__RenewalTerm__c.Label}</apex:outputLabel>
                    <apex:inputField value="{!quoteController.quote.zqu__RenewalTerm__c}" required="true"/>
                  </apex:pageBlockSectionItem>
                  
                  <apex:pageBlockSectionItem >
                    <apex:outputLabel >{!$ObjectType.zqu__Quote__c.fields.zqu__AutoRenew__c.Label}</apex:outputLabel>
                    <apex:inputField value="{!quoteController.quote.zqu__AutoRenew__c}"/>
                  </apex:pageBlockSectionItem>
                </apex:pageBlockSection>
              </apex:outputPanel>
              
            </apex:outputPanel>
      
		</c:PropertyComponent>

		<apex:actionFunction name="validateInvoiceOwner" rendered="{!quoteController.isInvoiceOwnerEnabled}"
			action="{!quoteController.onCurrencyChange}"
			rerender="customNotificationPanel,customRenderedInvoiceOwner"
			immediate="true" oncomplete="javascript:closeStatusModal();">
			<apex:param assignTo="{!quoteController.selectedCurrency}" value=""
				name="val" />
		</apex:actionFunction>
		<apex:actionFunction rendered="{!AND(quoteType != 'Subscription', quoteController.isInvoiceOwnerEnabled)}"
			name="changeInvoiceOwner"
			action="{!quoteController.changeInvoiceOwner}" status="modalStatus"
			rerender="customNotificationPanel" immediate="true">
			<apex:param assignTo="{!quoteController.invoiceOwnerLookupOptions.targetId}"
				value="" name="valId" />
			<apex:param assignTo="{!quoteController.invoiceOwnerLookupOptions.targetName}"
				value="" name="valName" />
		</apex:actionFunction>
		<apex:actionStatus id="modalStatus" onstart="displayStatusModal();"
			onstop="closeStatusModal();" />
		
	</apex:form>

</apex:component>